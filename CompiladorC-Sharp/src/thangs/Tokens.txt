Importacion de libreria -> using
Identificador -> System
Cierre de sentencia -> ;
Palabra reservada -> namespace
Identificador -> MiRey
Llave Izquierda -> {
Declaracion de clase -> class
Identificador -> Program
Llave Izquierda -> {
Palabra reservada -> static
Palabra reservada -> void
Nombre funcion principal -> Main
Parentesis -> (
Tipo de variable -> string(Cadena)
CorcheteIzquierdo -> [
CorcheteDerecho -> ]
Identificador -> args
Parentesis -> )
Llave Izquierda -> {
Refencia a clase -> Console
Punto -> .
Metodo de escritura -> WriteLine
Parentesis -> (
Tipo de dato String -> "Que milagro, mirrey"
Parentesis -> )
Cierre de sentencia -> ;
Tipo de variable -> int(Entero)
Identificador -> a
Asignacion -> =
Tipo de dato entero -> 5
Cierre de sentencia -> ;
Tipo de variable -> int(Entero)
Identificador -> b
Asignacion -> =
Tipo de dato entero -> 4
Cierre de sentencia -> ;
Tipo de variable -> string(Cadena)
Identificador -> unaCadena
Asignacion -> =
Tipo de dato String -> "soy una cadena"
Cierre de sentencia -> ;
Tipo de variable -> bool(Caracter)
Identificador -> cierto
Asignacion -> =
Tipo de dato Booleano -> true
Cierre de sentencia -> ;
Tipo de variable -> bool(Caracter)
Identificador -> falso
Asignacion -> =
Tipo de dato Booleano -> false
Cierre de sentencia -> ;
Tipo de variable -> int(Entero)
Identificador -> c
Asignacion -> =
Operador aritmetico -> resta -
Tipo de dato entero -> 10
Cierre de sentencia -> ;
Tipo de variable -> float(Flotante)
Identificador -> d
Asignacion -> =
Operador aritmetico -> resta -
Tipo de dato flotante -> 10.21
Cierre de sentencia -> ;
Tipo de variable -> char(Caracter)
Identificador -> caracter
Asignacion -> =
Tipo de dato caracter -> 'i'
Cierre de sentencia -> ;
Condicional -> switch
Parentesis -> (
Identificador -> a
Parentesis -> )
Llave Izquierda -> {
Palabra reservada -> case
Tipo de dato entero -> 1
Dos puntos -> :
Refencia a clase -> Console
Punto -> .
Metodo de escritura -> WriteLine
Parentesis -> (
Tipo de dato String -> "A vale 1"
Parentesis -> )
Cierre de sentencia -> ;
Palabra reservada -> break
Cierre de sentencia -> ;
Palabra reservada -> case
Tipo de dato entero -> 2
Dos puntos -> :
Tipo de variable -> int(Entero)
Identificador -> g
Asignacion -> =
Tipo de dato entero -> 2
Cierre de sentencia -> ;
Palabra reservada -> break
Cierre de sentencia -> ;
Palabra reservada -> case
Tipo de dato entero -> 3
Dos puntos -> :
Tipo de variable -> float(Flotante)
Identificador -> h
Asignacion -> =
Tipo de dato flotante -> 2.32
Cierre de sentencia -> ;
Palabra reservada -> break
Cierre de sentencia -> ;
Palabra reservada -> default
Dos puntos -> :
Refencia a clase -> Console
Punto -> .
Metodo de escritura -> WriteLine
Parentesis -> (
Tipo de dato String -> "Case de default"
Parentesis -> )
Cierre de sentencia -> ;
Llave Derecha -> }
Condicional -> if
Parentesis -> (
Identificador -> a
Operador Relacional -> >
Identificador -> b
Parentesis -> )
Llave Izquierda -> {
Refencia a clase -> Console
Punto -> .
Metodo de escritura -> Write
Parentesis -> (
Tipo de dato String -> "A es mayor que B"
Parentesis -> )
Cierre de sentencia -> ;
Llave Derecha -> }
Ciclo -> for
Parentesis -> (
Tipo de variable -> int(Entero)
Identificador -> i
Asignacion -> =
Tipo de dato entero -> 0
Cierre de sentencia -> ;
Identificador -> i
Operador Relacional -> <
Tipo de dato entero -> 100
Cierre de sentencia -> ;
Identificador -> i
Asignacion -> ++
Parentesis -> )
Llave Izquierda -> {
Ciclo -> while
Parentesis -> (
Identificador -> a
Operador Relacional -> <=
Tipo de dato entero -> 100
Parentesis -> )
Llave Izquierda -> {
Tipo de variable -> string(Cadena)
Identificador -> cadena
Asignacion -> =
Tipo de dato String -> "i"
Cierre de sentencia -> ;
Tipo de variable -> string(Cadena)
Identificador -> otraCadena
Asignacion -> =
Metodo de lectura -> ReadLine
Parentesis -> (
Parentesis -> )
Cierre de sentencia -> ;
Llave Derecha -> }
Llave Derecha -> }
Refencia a clase -> Console
Punto -> .
Metodo de escritura -> WriteLine
Parentesis -> (
Tipo de dato String -> "Que milagro, mirrey"
Parentesis -> )
Cierre de sentencia -> ;
Tipo de variable -> int(Entero)
Identificador -> a
Asignacion -> =
Tipo de dato entero -> 5
Cierre de sentencia -> ;
Tipo de variable -> int(Entero)
Identificador -> b
Asignacion -> =
Tipo de dato entero -> 4
Cierre de sentencia -> ;
Tipo de variable -> string(Cadena)
Identificador -> unaCadena
Asignacion -> =
Tipo de dato String -> "soy una cadena"
Cierre de sentencia -> ;
Tipo de variable -> bool(Caracter)
Identificador -> cierto
Asignacion -> =
Tipo de dato Booleano -> true
Cierre de sentencia -> ;
Tipo de variable -> bool(Caracter)
Identificador -> falso
Asignacion -> =
Tipo de dato Booleano -> false
Cierre de sentencia -> ;
Tipo de variable -> int(Entero)
Identificador -> c
Asignacion -> =
Operador aritmetico -> resta -
Tipo de dato entero -> 10
Cierre de sentencia -> ;
Tipo de variable -> float(Flotante)
Identificador -> d
Asignacion -> =
Operador aritmetico -> resta -
Tipo de dato flotante -> 10.21
Cierre de sentencia -> ;
Tipo de variable -> char(Caracter)
Identificador -> caracter
Asignacion -> =
Tipo de dato caracter -> 'i'
Cierre de sentencia -> ;
Condicional -> switch
Parentesis -> (
Identificador -> a
Parentesis -> )
Llave Izquierda -> {
Palabra reservada -> case
Tipo de dato entero -> 1
Dos puntos -> :
Refencia a clase -> Console
Punto -> .
Metodo de escritura -> WriteLine
Parentesis -> (
Tipo de dato String -> "A vale 1"
Parentesis -> )
Cierre de sentencia -> ;
Palabra reservada -> break
Cierre de sentencia -> ;
Palabra reservada -> case
Tipo de dato entero -> 2
Dos puntos -> :
Tipo de variable -> int(Entero)
Identificador -> g
Asignacion -> =
Tipo de dato entero -> 2
Cierre de sentencia -> ;
Palabra reservada -> break
Cierre de sentencia -> ;
Palabra reservada -> case
Tipo de dato entero -> 3
Dos puntos -> :
Tipo de variable -> float(Flotante)
Identificador -> h
Asignacion -> =
Tipo de dato flotante -> 2.32
Cierre de sentencia -> ;
Palabra reservada -> break
Cierre de sentencia -> ;
Palabra reservada -> default
Dos puntos -> :
Refencia a clase -> Console
Punto -> .
Metodo de escritura -> WriteLine
Parentesis -> (
Tipo de dato String -> "Case de default"
Parentesis -> )
Cierre de sentencia -> ;
Llave Derecha -> }
Condicional -> if
Parentesis -> (
Identificador -> a
Operador Relacional -> >
Identificador -> b
Parentesis -> )
Llave Izquierda -> {
Refencia a clase -> Console
Punto -> .
Metodo de escritura -> Write
Parentesis -> (
Tipo de dato String -> "A es mayor que B"
Parentesis -> )
Cierre de sentencia -> ;
Llave Derecha -> }
Ciclo -> for
Parentesis -> (
Tipo de variable -> int(Entero)
Identificador -> i
Asignacion -> =
Tipo de dato entero -> 0
Cierre de sentencia -> ;
Identificador -> i
Operador Relacional -> <
Tipo de dato entero -> 100
Cierre de sentencia -> ;
Identificador -> i
Asignacion -> ++
Parentesis -> )
Llave Izquierda -> {
Ciclo -> while
Parentesis -> (
Identificador -> a
Operador Relacional -> <=
Tipo de dato entero -> 100
Parentesis -> )
Llave Izquierda -> {
Tipo de variable -> string(Cadena)
Identificador -> cadena
Asignacion -> =
Tipo de dato String -> "i"
Cierre de sentencia -> ;
Tipo de variable -> string(Cadena)
Identificador -> otraCadena
Asignacion -> =
Metodo de lectura -> ReadLine
Parentesis -> (
Parentesis -> )
Cierre de sentencia -> ;
Llave Derecha -> }
Llave Derecha -> }
Refencia a clase -> Console
Punto -> .
Metodo de escritura -> WriteLine
Parentesis -> (
Tipo de dato String -> "Que milagro, mirrey"
Parentesis -> )
Cierre de sentencia -> ;
Tipo de variable -> int(Entero)
Identificador -> a
Asignacion -> =
Tipo de dato entero -> 5
Cierre de sentencia -> ;
Tipo de variable -> int(Entero)
Identificador -> b
Asignacion -> =
Tipo de dato entero -> 4
Cierre de sentencia -> ;
Tipo de variable -> string(Cadena)
Identificador -> unaCadena
Asignacion -> =
Tipo de dato String -> "soy una cadena"
Cierre de sentencia -> ;
Tipo de variable -> bool(Caracter)
Identificador -> cierto
Asignacion -> =
Tipo de dato Booleano -> true
Cierre de sentencia -> ;
Tipo de variable -> bool(Caracter)
Identificador -> falso
Asignacion -> =
Tipo de dato Booleano -> false
Cierre de sentencia -> ;
Tipo de variable -> int(Entero)
Identificador -> c
Asignacion -> =
Operador aritmetico -> resta -
Tipo de dato entero -> 10
Cierre de sentencia -> ;
Tipo de variable -> float(Flotante)
Identificador -> d
Asignacion -> =
Operador aritmetico -> resta -
Tipo de dato flotante -> 10.21
Cierre de sentencia -> ;
Tipo de variable -> char(Caracter)
Identificador -> caracter
Asignacion -> =
Tipo de dato caracter -> 'i'
Cierre de sentencia -> ;
Condicional -> switch
Parentesis -> (
Identificador -> a
Parentesis -> )
Llave Izquierda -> {
Palabra reservada -> case
Tipo de dato entero -> 1
Dos puntos -> :
Refencia a clase -> Console
Punto -> .
Metodo de escritura -> WriteLine
Parentesis -> (
Tipo de dato String -> "A vale 1"
Parentesis -> )
Cierre de sentencia -> ;
Palabra reservada -> break
Cierre de sentencia -> ;
Palabra reservada -> case
Tipo de dato entero -> 2
Dos puntos -> :
Tipo de variable -> int(Entero)
Identificador -> g
Asignacion -> =
Tipo de dato entero -> 2
Cierre de sentencia -> ;
Palabra reservada -> break
Cierre de sentencia -> ;
Palabra reservada -> case
Tipo de dato entero -> 3
Dos puntos -> :
Tipo de variable -> float(Flotante)
Identificador -> h
Asignacion -> =
Tipo de dato flotante -> 2.32
Cierre de sentencia -> ;
Palabra reservada -> break
Cierre de sentencia -> ;
Palabra reservada -> default
Dos puntos -> :
Refencia a clase -> Console
Punto -> .
Metodo de escritura -> WriteLine
Parentesis -> (
Tipo de dato String -> "Case de default"
Parentesis -> )
Cierre de sentencia -> ;
Llave Derecha -> }
Condicional -> if
Parentesis -> (
Identificador -> a
Operador Relacional -> >
Identificador -> b
Parentesis -> )
Llave Izquierda -> {
Refencia a clase -> Console
Punto -> .
Metodo de escritura -> Write
Parentesis -> (
Tipo de dato String -> "A es mayor que B"
Parentesis -> )
Cierre de sentencia -> ;
Llave Derecha -> }
Ciclo -> for
Parentesis -> (
Tipo de variable -> int(Entero)
Identificador -> i
Asignacion -> =
Tipo de dato entero -> 0
Cierre de sentencia -> ;
Identificador -> i
Operador Relacional -> <
Tipo de dato entero -> 100
Cierre de sentencia -> ;
Identificador -> i
Asignacion -> ++
Parentesis -> )
Llave Izquierda -> {
Ciclo -> while
Parentesis -> (
Identificador -> a
Operador Relacional -> <=
Tipo de dato entero -> 100
Parentesis -> )
Llave Izquierda -> {
Tipo de variable -> string(Cadena)
Identificador -> cadena
Asignacion -> =
Tipo de dato String -> "i"
Cierre de sentencia -> ;
Tipo de variable -> string(Cadena)
Identificador -> otraCadena
Asignacion -> =
Metodo de lectura -> ReadLine
Parentesis -> (
Parentesis -> )
Cierre de sentencia -> ;
Llave Derecha -> }
Llave Derecha -> }
Tipo de variable -> string(Cadena)
Identificador -> ultimaCadena
Asignacion -> =
Metodo de lectura -> ReadLine
Parentesis -> (
Parentesis -> )
Cierre de sentencia -> ;
Tipo de variable -> char(Caracter)
Identificador -> ultimoCaracter
Asignacion -> =
Tipo de dato caracter -> 'k'
Cierre de sentencia -> ;
Llave Derecha -> }
Llave Derecha -> }
Llave Derecha -> }
